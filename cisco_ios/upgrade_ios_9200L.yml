---
- name: Upgrade Cisco IOS-XE on Catalyst 9200L Switches
  hosts: switches 
  connection: network_cli
  vars_files:
    - ios_upgrade_vars.yml

  tasks:
  - name: Checking current IOS version
    ios_facts:

  - name: Comparing Installed and Expected IOS version
    debug:
      msg:
      -  "Current version is {{ ansible_net_version}}"
      -  "Upgrade image is {{ upgrade_ios_version }}"

  - name: Deciding whether the IOS will be upgraded or not
    debug:
      msg: "{% if ansible_net_version == upgrade_ios_version %} Current IOS version is up to date. Upgrade would be skipped for this host {% else %} Current Image version is different than the upgrade image and will be upgraded {% endif %}"

  - name: End the play for the host if device os version is up to date
    meta: end_host
    when: ansible_net_version == upgrade_ios_version

  - name: Backing up the running configuration to local file
    ios_config:
      backup: yes
      backup_options:
          filename: "{{ inventory_hostname }}.txt"

  - name: remove old OS files
    ios_command:
      commands:
        - command: install remove inactive
          prompt: Do you want to remove the above files
          answer: 'y'
    vars:
      ansible_command_timeout: 600

  - name: Copy IOS to device
    ios_command:
      commands:
        - command: 'copy http://{{http_url}}:{{http_port}}/{{ upgrade_ios_image }} flash:{{ upgrade_ios_image }}'
          prompt: 'Destination filename \[{{ upgrade_ios_image }}\]?'
          answer: "\r"
    vars:
      ansible_command_timeout: 1800

  - name: Check md5sum of IOS on device
    ios_command:
      commands:
        - command: 'verify /md5 flash:{{ upgrade_ios_image }} {{ upgrade_ios_hash }}'
    register: md5_output
    vars:
      ansible_command_timeout: 600

  - name: Continue if hash matches
    block:

      - name: Set new boot variable
        ios_config:
          lines: boot system flash:packages.conf

      - name: Write config
        ios_command:
          commands:
            - command: wr mem

      - name: Install new IOS
        ios_command:
          commands:
            - command: 'install add file flash:{{ upgrade_ios_image }} activate commit prompt-level none'
        vars:
          ansible_command_timeout: 1800

      - name: Wait for switch to reboot
        wait_for:
          host: "{{ ansible_host }}"
          port: 22
          delay: 60
          timeout: 600
        delegate_to: localhost

      - name: Gather facts of the switch again
        ios_facts:

      - name: Comparing Installed and Expected IOS version
        debug:
          msg:
            -  Expected image after the upgrade is {{ upgrade_ios_version }}
            -  Current version is {{ ansible_net_version }}

      - name: Upgrade Result
        debug:
          msg: "{% if ansible_net_version == upgrade_ios_version %} IOS Upgrade is complete! {% else %} IOS upgrade is not successul. Please check logs on {{ inventory_hostname }} {% endif %}"

    when: '"Verified" in md5_output.stdout[0]'